"""empty message

Revision ID: af2e06e6d92f
Revises: 60b0474b6dd9
Create Date: 2023-03-13 15:51:12.791013

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'af2e06e6d92f'
down_revision = '60b0474b6dd9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drivers',
    sa.Column('driverId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('driverRef', sa.String(length=255), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('code', sa.String(length=3), nullable=True),
    sa.Column('forename', sa.String(length=255), nullable=False),
    sa.Column('surname', sa.String(length=255), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('nationality', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('driverId'),
    sa.UniqueConstraint('driverRef')
    )
    op.create_table('status',
    sa.Column('statusId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('statusId')
    )
    op.create_table('constructorstandings',
    sa.Column('constructorStandingsId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('constructorId', sa.Integer(), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('positionText', sa.String(length=255), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['constructorId'], ['constructors.constructorId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('constructorStandingsId')
    )
    op.create_table('driverstandings',
    sa.Column('driverStandingsId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('points', sa.Float(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('positionText', sa.String(length=255), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('driverStandingsId')
    )
    op.create_table('laptimes',
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('lap', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('time', sa.String(length=255), nullable=True),
    sa.Column('milliseconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('raceId', 'driverId', 'lap')
    )
    op.create_table('pitstops',
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('stop', sa.Integer(), nullable=False),
    sa.Column('lap', sa.Integer(), nullable=False),
    sa.Column('time', sa.Integer(), nullable=True),
    sa.Column('duration', sa.String(length=255), nullable=True),
    sa.Column('milliseconds', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('raceId', 'driverId', 'stop')
    )
    op.create_table('qualifying',
    sa.Column('qualifyId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('constructorId', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('q1', sa.String(length=255), nullable=True),
    sa.Column('q2', sa.String(length=255), nullable=True),
    sa.Column('q3', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['constructorId'], ['constructors.constructorId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('qualifyId')
    )
    op.create_table('results',
    sa.Column('resultId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('constructorId', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('grid', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('positionText', sa.String(length=255), nullable=False),
    sa.Column('positionOrder', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('laps', sa.Integer(), nullable=False),
    sa.Column('time', sa.String(length=255), nullable=True),
    sa.Column('milliseconds', sa.Integer(), nullable=True),
    sa.Column('fastestLap', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('fastestLapTime', sa.Integer(), nullable=True),
    sa.Column('fastestLapSpeed', sa.Integer(), nullable=True),
    sa.Column('statusId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['constructorId'], ['constructors.constructorId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['statusId'], ['status.statusId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('resultId')
    )
    op.create_table('sprintresults',
    sa.Column('sprintResultId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=False),
    sa.Column('driverId', sa.Integer(), nullable=False),
    sa.Column('constructorId', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('grid', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('positionText', sa.String(length=255), nullable=False),
    sa.Column('positionOrder', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('laps', sa.Integer(), nullable=False),
    sa.Column('time', sa.String(length=255), nullable=True),
    sa.Column('milliseconds', sa.Integer(), nullable=True),
    sa.Column('fastestLap', sa.Integer(), nullable=True),
    sa.Column('fastestLapTime', sa.Integer(), nullable=True),
    sa.Column('fastestLapSpeed', sa.Integer(), nullable=True),
    sa.Column('statusId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['constructorId'], ['constructors.constructorId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['driverId'], ['drivers.driverId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['raceId'], ['races.raceId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['statusId'], ['status.statusId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sprintResultId')
    )
    with op.batch_alter_table('circuits', schema=None) as batch_op:
        batch_op.alter_column('circuitRef',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('url',
               existing_type=mysql.INTEGER(display_width=11),
               type_=sa.String(length=255),
               nullable=False)

    with op.batch_alter_table('constructors', schema=None) as batch_op:
        batch_op.alter_column('constructorRef',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('url',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)

    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.alter_column('year',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('round',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('circuitId',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('date',
               existing_type=sa.DATE(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.alter_column('date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('circuitId',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('round',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('year',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)

    with op.batch_alter_table('constructors', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('constructorRef',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)

    with op.batch_alter_table('circuits', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=sa.String(length=255),
               type_=mysql.INTEGER(display_width=11),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('circuitRef',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)

    op.drop_table('sprintresults')
    op.drop_table('results')
    op.drop_table('qualifying')
    op.drop_table('pitstops')
    op.drop_table('laptimes')
    op.drop_table('driverstandings')
    op.drop_table('constructorstandings')
    op.drop_table('status')
    op.drop_table('drivers')
    # ### end Alembic commands ###
